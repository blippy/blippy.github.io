<html><head>
    <LINK REL=StyleSheet HREF="../style.css" TYPE="text/css">
<title>Parsing</title></head>
<body>

<a href="../index.html">Home</a> : <a href="programming.htm" >programming</a>


<h1>Parsing</h1>

<hr><h2>Recursive descent parsing</h2>

<pre>
// ARITHMETIC
// Adopt the algorithm at 
// https://www.engr.mun.ca/~theo/Misc/exp_parsing.htm#classic
// for computing arithmetic
//
// Here&#x27;s the original derivations
//  E --&gt; T {( &quot;+&quot; | &quot;-&quot; ) T}
//  T --&gt; F {( &quot;*&quot; | &quot;/&quot; ) F}
//  F --&gt; P [&quot;^&quot; F]
//  P --&gt; v | &quot;(&quot; E &quot;)&quot; | &quot;-&quot; T
//
// Here&#x27;s mine:
// I extend BNF with the notion of a function, prefixed by &amp;
// {} zero or more repetitions
// [] optional
//  &amp;M(o, X) --&gt; X {o X} // e.g. &amp;M((&quot;+&quot;|&quot;-&quot;), T) --&gt; T { (&quot;+&quot;|&quot;-&quot;) T }
//  E --&gt; &amp;M(( &quot;&lt;&quot; | &quot;&lt;=&quot; | &quot;&gt;&quot; | &quot;&gt;=&quot; | &quot;==&quot; | &quot;!=&quot; ), R)
//  R --&gt; &amp;M(( &quot;+&quot; | &quot;-&quot; ), T)
//  T --&gt; &amp;M(( &quot;*&quot; | &quot;/&quot; ), F)
//  F --&gt; [&quot;+&quot;|&quot;-&quot;] (v | &quot;(&quot; E &quot;)&quot;)

</pre>


<li><a href="https://github.com/blippy/cerbo/blob/master/blang/v4/blang.cc">blang</a></li>


<hr><h2>Links to other sites</h2>


<h3>Meta II</h3>

<li><a href="https://github.com/advancingdragon/meta">advancingdragon</a> implmentation in C, with a few extra niceties. See also my github</li>

<li><a href="https://github.com/melvinzhang/meta2-lua">Lua</a> implementation</li>

<li><a href="http://www.chilton-computing.org.uk/acl/pdfs/schorre.pdf">PDF</a></li>


<li><a href="http://www.bayfronttechnologies.com/mc_tutorial.html">Tutorial</a></li>


<h3>Unclassified</h3>


<li><a href="https://mcturra2000.wordpress.com/2017/08/24/a-simple-basic-interpreter-in-c/">BASIC interpreter in C++</a> written by me</li>

<li><a href="http://prog21.dadgum.com/30.html">howto</a></li>

<li><a href="http://en.wikipedia.org/wiki/Regular_expression#Character_classes">Regular expression character classes</a> - describes [:alpha:], [:blank:], etc</li>

<li><a href="http://stackoverflow.com/questions/2039795/regular-expression-for-a-string-literal-in-flex-lex">Regular expression for a string literal in flex/lex</a> - stakoverflow question</li>



<hr><pre>
Author:  Mark Carter
Created: 11-Oct-2017
Updated: 30-Sep-2019
</pre>
</body>
</html>
