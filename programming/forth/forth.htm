<html><head>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <LINK REL=StyleSheet HREF="../style.css" TYPE="text/css">
  <title>forth</title>
</head>

<body>

<a href="../../index.html">Home</a> : 
<a href="../programming.htm">programming</a> 


<h1>forth</h1>


<hr><h2>Also on this site</h2>

<li><a href="macros.htm">macrology</a></li>


<hr><h2>Links to other sites</h2>

<h3>Implementations</h3>

<li><a href="https://github.com/ekoeppen/CoreForth/blob/master/generic/CoreForth.s">ARM assembly</a></li>

<li><a href="http://ficl.sourceforge.net/parsesteps.html">ficl</a>
- features an extensible parser chain
</li>

<li><a href="https://github.com/larsbrinkhoff/lbForth">lbForth</a>
- self-hosting, bootstrapping, metacompiled Forth
</li>


<li><a href="https://github.com/phreda4/r3d4">r3</a>
- colorForth inspired
</li>


<h3>Unclassified</h3>


<li><a href="https://gist.github.com/blippy/42ddba2c141580c0b64f57c534f3c197">
<code>&lt;times ... times&gt;</code></a>
- execute a code block n times</li>

<li><a href="http://turboforth.net/lang_ref/view_word.asp?id=70">0BRANCH</a></li> - you can look up other words in the Forth standard, too

<li><a href="http://astro.pas.rochester.edu/Forth/forth-words.html">alphabetical list of forth words</a></li>




<li><a href="https://wiki.c2.com/?ForthSimplicity">colon compiler</a> - simple but correct implementation of the core Forth colon compiler</li>

<li><a href="https://softwareengineering.stackexchange.com/questions/339283/forth-how-do-create-and-does-work-exactly">create does&gt;</a> - how it works</li>

<li><a href="https://mcturra2000.wordpress.com/2018/09/22/forth-dsl-example/">DSL example</a></li>

<li><a href="https://mcturra2000.wordpress.com/2018/10/06/forth-equivalence/">equivalence</a></li>

<li><a href="http://www.jimbrooks.org/archive/programming/forth/FIG-FORTH_internals.php">fig-forth</a></li>

<li><a href="https://forth-standard.org/standard/core">glossary</a>
- good reference material
</li>

<li><a href="http://www.figuk.plus.com/build/heart.htm">heart of forth</a></li>


<li><a href="https://www.bradrodriguez.com/papers/moving1.htm">moving forth</a>
- discusses direct threading, indirect threading, and subroutine threading
</li>

<li><a href="https://yosefk.com/blog/my-history-with-forth-stack-machines.html">My history with Forth &amp; stack machines</a> - shows how to implement (, IF, THEN, BEGIN, AGAIN, UNTIL, AHEAD, CONSTANT, STRUCT </li>

<li><a href="https://www.youtube.com/watch?v=mvrE2ZGe-rs">over the shoulder</a></li>


<li><a href="https://b-ok.org/book/526735/e2484a">
		Programmer's handbook
	</a></li>

<li><a href="http://www.mosaic-industries.com/embedded-systems/legacy-products/qed2-68hc11-microcontroller/software/chapter_16_advanced_topics">QED-Forth</a>
Implementations for ABORT, HEX, QUIT, QUERY, INTERPRET
</li>


<li><a href="https://news.ycombinator.com/item?id=22105754">recursive descent parser</a></li>

<li><a href="https://forth-standard.org/standard/implement#imp:exception:CATCH">reference implementation</a> - how to implement certain words</li>

<li><a href="https://bartoszsypytkowski.com/simple-virtual-machine/">simple virtual machine</a></li>


<li><a href="https://www.forth.com/starting-forth/9-forth-execution/">under the hood</a></li>


<li><a href="http://www.nicholson.com/rhn/files/Tiny_BASIC_in_Forth.txt">tiny BASIC</a> written in Forth, of course</li>

<li><a href="https://www.quora.com/How-do-I-write-a-Forth-interpreter">writing a Forth interpreter</a></li>


<h3>Wordpress</h3>

My writing.
<p>


<li><a href="https://mcturra2000.wordpress.com/2020/02/16/forthlang-ninja-development/">POL</a>
- a command-interpreter for accts, including APPLY and <code>&lt;&lt; .. &gt;&gt;</code>
</li>


<li><a href="https://mcturra2000.wordpress.com/2020/02/17/lets-implement-polymorphism-in-forth/">polymorphism</a>
- an implementation
</li>


<hr><pre>
Author:  Mark Carter
Created: 22-Sep-2018
Updated: 18-Sep-2020
</pre>
</body></html>
